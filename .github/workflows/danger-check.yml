name: Danger Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  danger-analysis:
    name: Run Danger Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper git diff

      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}

      - name: Install dependencies
        run: |
          # Install jq if not already available
          if ! command -v jq &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

      - name: Run Danger Analysis
        id: danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTIONS: true
          LOCAL_MODE: false
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          # Make the script executable
          chmod +x run-danger.sh

          # Run the danger system
          ./run-danger.sh ${{ github.base_ref }}

          echo "analysis_exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Upload analysis results
        uses: actions/upload-artifact@v4
        with:
          name: danger-results
          path: Danger/danger-results.json
          retention-days: 7

      - name: Post PR comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          ./DangerSystem/github-pr-comment.sh Danger/danger-results.json

      - name: Check if PR should be blocked
        if: steps.danger.outputs.analysis_exit_code != '0'
        run: |
          echo "❌ Danger checks failed! Please fix the issues before merging."
          exit 1

  # Optional: Add status check
  danger-status:
    name: Danger Status Check
    runs-on: ubuntu-latest
    needs: danger-analysis
    if: always()

    steps:
      - name: Download results
        uses: actions/download-artifact@v4
        with:
          name: danger-results

      - name: Check results
        run: |
          if [ -f danger-results.json ]; then
            passed=$(jq -r '.summary.passed' danger-results.json)
            errors=$(jq -r '.summary.error_count' danger-results.json)
            warnings=$(jq -r '.summary.warning_count' danger-results.json)
            
            echo "Danger Check Results:"
            echo "  Passed: $passed"
            echo "  Errors: $errors"
            echo "  Warnings: $warnings"
            
            if [ "$passed" != "true" ]; then
              echo "::error::Danger checks failed with $errors errors and $warnings warnings"
              exit 1
            fi
          else
            echo "::error::No danger results found"
            exit 1
          fi

  # Alternative simplified workflow using composite action
  danger-check-simple:
    name: Danger Check (Simple)
    runs-on: ubuntu-latest
    if: false # Set to true to use this simplified version instead

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Danger Bash Check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch base branch
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}

          # Install jq
          if ! command -v jq &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

          # Run analysis and post comment
          chmod +x ./danger-bash/*.sh

          ./danger-bash/danger-analyze.sh \
            --rules ./danger-bash/rules.json \
            --output danger-results.json \
            --base ${{ github.base_ref }}

          # Post comment (will exit with error if checks failed)
          GITHUB_REPOSITORY="${{ github.repository }}" \
          GITHUB_PR_NUMBER="${{ github.event.pull_request.number }}" \
          ./danger-bash/github-pr-comment.sh danger-results.json
